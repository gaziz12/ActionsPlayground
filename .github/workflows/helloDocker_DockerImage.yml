name: Docker Image CI for helloDocker project

on:
  push:
    branches: 
      - master
    paths:
      - 'src/helloDocker/*'

jobs:

  build:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with: 
        dotnet-version: 3.0.100
      
    - name: Build with dotnet
      run: dotnet build ${GITHUB_WORKSPACE}/src/helloDocker/app/dockerConsole.csproj -c Release
    - name: Publish with dotnet
      run: dotnet publish ${GITHUB_WORKSPACE}/src/helloDocker/app/dockerConsole.csproj -c Release
    - name: Build the Docker image
      run: docker build -f ${GITHUB_WORKSPACE}/src/helloDocker/Dockerfile -t my-image-name:$(date +%s) .
      # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
